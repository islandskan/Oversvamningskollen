import { query } from '../db.js';

console.log("PG_URI:", process.env.PG_URI);

async function setup() {
  try {
    await query(`
      CREATE TABLE "roles" (
        "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        "name" VARCHAR(30) NOT NULL
      );
    `);

    await query(`
      CREATE TABLE "users" (
        "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        "role_id" INTEGER,
        "name" VARCHAR(30) NOT NULL,
        "email" VARCHAR(40) UNIQUE NOT NULL,
        "password" VARCHAR NOT NULL,
        "google_id" TEXT,
        CONSTRAINT "FK_users.role_id"
          FOREIGN KEY ("role_id")
          REFERENCES "roles"("id")
          ON DELETE SET NULL
      );
    `);

    await query(`
      CREATE TABLE "sensors" (
        "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        "installation_date" TIMESTAMP,
        "battery_status" INTEGER,
        "longitude" INTEGER,
        "latitude" INTEGER NOT NULL,
        "location_description" VARCHAR(35),
        "sensor_failure" BOOLEAN,
        "lost_communication" BOOLEAN
      );
    `);

    await query(`
      CREATE TABLE "emergency_contacts" (
        "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        "sensor_id" INTEGER,
        "name" VARCHAR(30) NOT NULL,
        "phone_number" VARCHAR(13) NOT NULL,
        CONSTRAINT "FK_emergency_contacts.sensor_id"
          FOREIGN KEY ("sensor_id")
          REFERENCES "sensors"("id")
          ON DELETE SET NULL
      );
    `);

    await query(`
      CREATE TABLE "waterlevels" (
        "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        "sensor_id" INTEGER NOT NULL,
        "waterlevel" INTEGER NOT NULL,
        "rate_of_change" INTEGER,
        "measured_at" TIMESTAMPTZ,
        CONSTRAINT "FK_waterlevels.sensor_id"
          FOREIGN KEY ("sensor_id")
          REFERENCES "sensors"("id")
          ON DELETE CASCADE
      );
    `);

    // Indexes for performance
    await query(`CREATE INDEX IF NOT EXISTS idx_users_email ON users(email);`);
    await query(`CREATE INDEX IF NOT EXISTS idx_waterlevels_sensor_id ON waterlevels(sensor_id);`);
    await query(`CREATE INDEX IF NOT EXISTS idx_emergency_contacts_sensor_id ON emergency_contacts(sensor_id);`);

    console.log("Databasen skapades utan fel.");
  } catch (err) {
    console.error('Fel vid skapande av databas: ', err);
  }
}

setup();
