openapi: 3.0.0
info:
  title: User API
  version: 1.0.0
servers:
  - url: http://localhost:3000
paths:
  /api/users:
    get:
      summary: Get all users
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
              examples:
                SimpleUser:
                  summary: Simple user example
                  value:
                    - userID: 1
                      name: John Doe
                      email: johndoe@example.com
    post:
      summary: Create a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInput'
            examples:
              SimpleUser:
                summary: Simple user example
                value:
                  name: John Doe
                  email: johndoe@example.com
      responses:
        '201':
          description: Created user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                SimpleUser:
                  summary: Simple user example
                  value:
                    id: 1
                    name: John Doe
                    email: johndoe@example.com
  /api/users/{userID}:
    get:
      summary: Get a user
      parameters:
        - name: userID
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                SimpleUser:
                  summary: Simple user example
                  value:
                    userID: 1
                    name: John Doe
                    email: johndoe@example.com
    patch:
      summary: Update a user
      parameters:
        - name: userID  # Rename the parameter to userID to avoid confusion
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
            examples:
              SimpleUser:
                summary: Simple user example
                value:
                  userName: Jane Doe
                  mail: janedoe@example.com
                  role: user
                  password: newpassword123
      responses:
        '200':
          description: Updated user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                SimpleUser:
                  summary: Updated user example
                  value:
                    userID: 1
                    userName: Jane Doe
                    mail: janedoe@example.com
                    role: user
                    password: newpassword123
    delete:
      summary: Delete a user
      parameters:
        - name: userID
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Deleted user
          content:
            application/json:
              schema:
                type: string
                example: User deleted
  /api/sensors:
    get:
      summary: Get all sensors
      responses:
        '200':
          description: List of sensors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Sensor'
              examples:
                SimpleSensors:
                  summary: Simple sensors example
                  value:
                    - sensorID: 1
                      name: Sensor 1
                      batteryStatus: 80
                      installationDate: '2023-02-01'
                      locationID: 'Malmoe1'
                    - sensorID: 2
                      name: Sensor 2
                      batteryStatus: 50
                      installationDate: '2023-02-01'
                      locationID: 'Malmoe1'
    post: 
      summary: Create a sensor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SensorInput'
            examples:
              SimpleSensors:
                summary: Simple sensors example
                value:
                  - name: Sensor 1
                    batteryStatus: 22.5
                    installationDate: '2023-01-01'
                    locationID: 'Malmoe1'
                  - name: Sensor 2
                    batteryStatus: 50
                    installationDate: '2023-02-01'
                    locationID: 'Malmoe1'
      responses:
        '201':
          description: Created sensor
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Sensor'
              examples:
                SimpleSensors:
                  summary: Simple sensors example
                  value:
                    - sensorID: 1
                      name: Sensor 1
                      batteryStatus: 50
                      installationDate: '2023-02-01'
                      locationID: 'Malmoe1'
                    - sensorID: 2
                      name: Sensor 2
                      batteryStatus: 50
                      installationDate: '2023-02-01'
                      locationID: 'Malmoe1'
components:
  schemas:
    User:
      type: object
      properties:
        userID:
          type: string
          example: '1'
        userName:
          type: string
          example: 'Thomas'
        mail:
          type: string
          example: 'thomas.kronvoldt@chasacademy.se'
        role:
          type: string
          example: 'admin'
        password:
          type: string
          example: 'password123'
    UserInput:
      type: object
      properties:
        userName:
          type: string
          example: 'ThomasK'
        mail:
          type: string
          example: 'thomas.kronvoldt@chasacademy.se'
        role:
          type: string
          example: 'user'
        password:
          type: string
          example: 'password123'
    Sensor:
      type: object
      properties:
        sensorID:
          type: string
          example: "1"
        batteryStatus:
          type: integer
          example: 80
        installationDate:
          type: string
          format: date
          example: "2025-01-01"
        locationID:
          type: string
          example: "Malmö1"
    SensorsResponse:
      type: object
      properties:
        message:
          type: string
          example: "Hämtar alla sensorer"
        sensors:
          type: array
          items:
            $ref: '#/components/schemas/Sensor'
    SensorInput:  
      type: object
      properties:
        sensorName:
          type: string
          example: 'Sensor 1'
        batteryStatus:
          type: integer
          example: 100
        installationDate:
          type: string
          example: '2023-01-01'
        locationID:
          type: string
          example: 'Malmö1'