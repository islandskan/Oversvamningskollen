--
-- PostgreSQL database dump
--

-- Dumped from database version 17.4
-- Dumped by pg_dump version 17.4

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET transaction_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: emergency_contacts; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.emergency_contacts (
    id integer NOT NULL,
    sensor_id integer,
    name character varying(30) NOT NULL,
    phone_number character varying(13) NOT NULL
);


ALTER TABLE public.emergency_contacts OWNER TO neondb_owner;

--
-- Name: emergency_contacts_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.emergency_contacts ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.emergency_contacts_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: roles; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.roles (
    id integer NOT NULL,
    name character varying(30) NOT NULL
);


ALTER TABLE public.roles OWNER TO neondb_owner;

--
-- Name: roles_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.roles ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.roles_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: sensors; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.sensors (
    id integer NOT NULL,
    installation_date timestamp without time zone,
    battery_status integer,
    longitude integer,
    latitude integer NOT NULL,
    location_description character varying(35),
    sensor_failure boolean,
    lost_communication boolean
);


ALTER TABLE public.sensors OWNER TO neondb_owner;

--
-- Name: sensors_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.sensors ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.sensors_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: users; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.users (
    id integer NOT NULL,
    role_id integer,
    name character varying(30) NOT NULL,
    email character varying(40) NOT NULL,
    password character varying NOT NULL,
    google_id text
);


ALTER TABLE public.users OWNER TO neondb_owner;

--
-- Name: users_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.users ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.users_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: waterlevels; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.waterlevels (
    id integer NOT NULL,
    sensor_id integer NOT NULL,
    waterlevel integer NOT NULL,
    rate_of_change integer,
    measured_at timestamp with time zone
);


ALTER TABLE public.waterlevels OWNER TO neondb_owner;

--
-- Name: waterlevels_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.waterlevels ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.waterlevels_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Data for Name: emergency_contacts; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.emergency_contacts (id, sensor_id, name, phone_number) FROM stdin;
1	1	Nina Floodwatch	+46700000001
2	2	Carl Safety	+46700000002
3	3	Laura Risk	+46700000003
4	4	Mike Alert	+46700000004
5	5	Diana Rescue	+46700000005
\.


--
-- Data for Name: roles; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.roles (id, name) FROM stdin;
1	Admin
2	Technician
3	Viewer
\.


--
-- Data for Name: sensors; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.sensors (id, installation_date, battery_status, longitude, latitude, location_description, sensor_failure, lost_communication) FROM stdin;
1	2024-12-01 10:00:00	95	18012	598745	Riverbank North	f	f
2	2025-01-15 14:30:00	80	18056	598800	Riverbend East	f	t
3	2025-02-20 09:00:00	70	18090	598710	Dam Outlet	t	f
4	2025-03-05 16:45:00	60	18100	598600	Bridge Support	f	f
5	2025-04-01 08:20:00	88	18075	598900	Floodplain Zone	t	t
\.


--
-- Data for Name: users; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.users (id, role_id, name, email, password, google_id) FROM stdin;
1	1	Alice Admin	alice@example.com	securepassword1	\N
2	2	Bob Tech	bob@example.com	securepassword2	\N
3	3	Charlie Viewer	charlie@example.com	securepassword3	\N
\.


--
-- Data for Name: waterlevels; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.waterlevels (id, sensor_id, waterlevel, rate_of_change, measured_at) FROM stdin;
1	1	2	1	2025-05-12 10:30:00+02
2	1	3	2	2025-05-12 11:30:00+02
3	2	1	1	2025-05-12 10:45:00+02
4	2	2	3	2025-05-12 12:00:00+02
5	3	4	2	2025-05-12 09:15:00+02
6	3	3	1	2025-05-12 10:15:00+02
7	4	1	3	2025-05-12 08:50:00+02
8	4	2	2	2025-05-12 10:10:00+02
9	5	3	2	2025-05-12 11:00:00+02
10	5	4	3	2025-05-12 12:30:00+02
\.


--
-- Name: emergency_contacts_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.emergency_contacts_id_seq', 5, true);


--
-- Name: roles_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.roles_id_seq', 3, true);


--
-- Name: sensors_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.sensors_id_seq', 5, true);


--
-- Name: users_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.users_id_seq', 3, true);


--
-- Name: waterlevels_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.waterlevels_id_seq', 10, true);


--
-- Name: emergency_contacts emergency_contacts_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.emergency_contacts
    ADD CONSTRAINT emergency_contacts_pkey PRIMARY KEY (id);


--
-- Name: roles roles_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.roles
    ADD CONSTRAINT roles_pkey PRIMARY KEY (id);


--
-- Name: sensors sensors_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sensors
    ADD CONSTRAINT sensors_pkey PRIMARY KEY (id);


--
-- Name: users users_email_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT users_email_key UNIQUE (email);


--
-- Name: users users_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT users_pkey PRIMARY KEY (id);


--
-- Name: waterlevels waterlevels_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.waterlevels
    ADD CONSTRAINT waterlevels_pkey PRIMARY KEY (id);


--
-- Name: idx_emergency_contacts_sensor_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_emergency_contacts_sensor_id ON public.emergency_contacts USING btree (sensor_id);


--
-- Name: idx_users_email; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_users_email ON public.users USING btree (email);


--
-- Name: idx_waterlevels_sensor_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_waterlevels_sensor_id ON public.waterlevels USING btree (sensor_id);


--
-- Name: emergency_contacts FK_emergency_contacts.sensor_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.emergency_contacts
    ADD CONSTRAINT "FK_emergency_contacts.sensor_id" FOREIGN KEY (sensor_id) REFERENCES public.sensors(id) ON DELETE SET NULL;


--
-- Name: users FK_users.role_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT "FK_users.role_id" FOREIGN KEY (role_id) REFERENCES public.roles(id) ON DELETE SET NULL;


--
-- Name: waterlevels FK_waterlevels.sensor_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.waterlevels
    ADD CONSTRAINT "FK_waterlevels.sensor_id" FOREIGN KEY (sensor_id) REFERENCES public.sensors(id) ON DELETE CASCADE;


--
-- PostgreSQL database dump complete
--

